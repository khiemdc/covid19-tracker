{"version":3,"sources":["components/Cards/Cards.module.css","components/Cards/Cards.jsx","api/index.js","components/Chart/Chart.jsx","components/CountryPicker/CountryPicker.jsx","App.js","index.js","components/CountryPicker/CountryPicker.module.css","App.module.css","components/Chart/Chart.module.css","images/coronavirus-4.png"],"names":["module","exports","Cards","data","confirmed","recovered","deaths","lastUpdate","className","styles","container","Grid","spacing","justify","item","component","Card","xs","md","cx","card","infected","CardContent","Typography","color","gutterBottom","variant","style","fontWeight","start","end","value","duration","separator","Date","toDateString","url","fetchData","a","axios","get","fetchDailyData","modifiedData","map","dailyData","total","date","reportDate","console","log","fetchCountries","countries","country","name","fetchCountriesData","changeableUrl","Chart","useState","setDailyData","useEffect","fetchAPI","lineChart","length","labels","datasets","label","borderColor","fill","backgroundColor","barChart","lable","options","legend","display","title","text","CountryPicker","handleCountryChange","fetchedCountries","setFetchedCountries","FormControl","formControl","FormLabel","formLabel","NativeSelect","defaultValue","onChange","e","target","i","key","App","state","fetchedCountryData","setState","fetchedData","this","image","src","coronaImage","alt","React","Component","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.6e631e4f.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Cards_container__1cyvV\",\"card\":\"Cards_card__3wGB3\",\"infected\":\"Cards_infected__1YHPL\",\"recovered\":\"Cards_recovered__3B6ZZ\",\"deaths\":\"Cards_deaths__1NNPB\"};","import React from 'react';\r\nimport { Card, CardContent, Typography, Grid } from '@material-ui/core';\r\nimport CountUp from 'react-countup';\r\nimport cx from 'classnames';\r\n\r\nimport styles from './Cards.module.css';\r\n\r\nconst Cards = ( { data: { confirmed, recovered, deaths, lastUpdate } } ) => {\r\n    if(!confirmed) {\r\n        return 'Loading...';\r\n    }\r\n\r\n    return (\r\n        <div className={styles.container}>\r\n            <Grid container spacing={3} justify=\"center\">\r\n                <Grid item component={Card} xs={12} md={3} className={cx(styles.card, styles.infected)}>\r\n                    <CardContent>\r\n                        <Typography color=\"textSecondary\" gutterBottom>Infected</Typography>\r\n                        <Typography variant=\"h5\">\r\n                            <CountUp style={{color: 'orange', fontWeight:'bold'}}\r\n                                start={0}\r\n                                end={confirmed.value}\r\n                                duration={2.5}\r\n                                separator=\",\"\r\n                            />\r\n                        </Typography>\r\n                        <Typography color=\"textSecondary\">{new Date(lastUpdate).toDateString()}</Typography>\r\n                        <Typography variant=\"body2\">Số người bị nhiễm Coronavirus</Typography>\r\n                    </CardContent>\r\n                </Grid>\r\n                <Grid item component={Card} xs={12} md={3} className={cx(styles.card, styles.recovered)}>\r\n                    <CardContent>\r\n                        <Typography color=\"textSecondary\" gutterBottom>Recovered</Typography>\r\n                        <Typography variant=\"h5\">\r\n                            <CountUp style={{color: 'green', fontWeight:'bold'}}\r\n                                start={0}\r\n                                end={recovered.value}\r\n                                duration={2.5}\r\n                                separator=\",\"\r\n                            />\r\n                        </Typography>\r\n                        <Typography color=\"textSecondary\">{new Date(lastUpdate).toDateString()}</Typography>\r\n                        <Typography variant=\"body2\">Số bệnh nhân đã được chữa khỏi</Typography>\r\n                    </CardContent>\r\n                </Grid>\r\n                <Grid item component={Card} xs={12} md={3} className={cx(styles.card, styles.deaths)}>\r\n                    <CardContent>\r\n                        <Typography color=\"textSecondary\" gutterBottom>Deaths</Typography>\r\n                        <Typography variant=\"h5\">\r\n                            <CountUp style={{color: 'red', fontWeight:'bold'}}\r\n                                start={0}\r\n                                end={deaths.value}\r\n                                duration={2.5}\r\n                                separator=\",\"\r\n                            />\r\n                        </Typography>\r\n                        <Typography color=\"textSecondary\">{new Date(lastUpdate).toDateString()}</Typography>\r\n                        <Typography variant=\"body2\">Số người tử vong vì COVID-19</Typography>\r\n                    </CardContent>\r\n                </Grid>\r\n            </Grid>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Cards;","import axios from 'axios';\r\n\r\nconst url = 'https://covid19.mathdro.id/api';\r\n\r\nexport const fetchData = async () => {\r\n    try {\r\n        const { data: { confirmed, recovered, deaths, lastUpdate } } = await axios.get(url);\r\n        \r\n        return { confirmed, recovered, deaths, lastUpdate } ;\r\n    } catch (error) {\r\n\r\n    }\r\n}\r\n\r\nexport const fetchDailyData = async () => {\r\n    try {\r\n        const { data } = await axios.get(`${url}/daily`);\r\n        \r\n        const modifiedData = data.map((dailyData) => ({\r\n            confirmed: dailyData.confirmed.total,\r\n            deaths: dailyData.deaths.total,\r\n            date: dailyData.reportDate\r\n        }));\r\n        return modifiedData;\r\n    } catch (error) {\r\n        console.log(error);\r\n    }\r\n}\r\n\r\nexport const fetchCountries = async () => {\r\n    try {\r\n        const { data: { countries } } = await axios.get(`${url}/countries`);\r\n\r\n        return countries.map((country) => country.name);\r\n        \r\n    } catch(error) {\r\n        console.log(error);\r\n    }\r\n}\r\n\r\nexport const fetchCountriesData = async (country) => {\r\n    let changeableUrl = url;\r\n    if(country) {\r\n        changeableUrl = `${url}/countries/${country}`;\r\n    }\r\n    try {\r\n        const { data: { confirmed, recovered, deaths, lastUpdate} } = await axios.get(changeableUrl);\r\n        return { confirmed, recovered, deaths, lastUpdate };\r\n    } catch(error) {\r\n        console.log(error);\r\n    }\r\n}","import React, { useState, useEffect } from 'react';\r\nimport { fetchDailyData } from '../../api';\r\nimport { Line, Bar } from 'react-chartjs-2';\r\n\r\nimport styles from './Chart.module.css';\r\n\r\nconst Chart = ({ data: { confirmed, recovered, deaths }, country }) => {\r\n    const [dailyData, setDailyData] = useState([]);\r\n\r\n    useEffect(() => {\r\n        const fetchAPI = async () => {\r\n            setDailyData(await fetchDailyData());\r\n        }\r\n\r\n        // console.log (dailyData);\r\n\r\n        fetchAPI();\r\n    }, []);\r\n\r\n    const lineChart = (\r\n        dailyData.length\r\n            ? (\r\n                <Line \r\n                    data = {{\r\n                        labels: dailyData.map(({ date }) => date),\r\n                        datasets: [{\r\n                            data: dailyData.map(({ confirmed }) => confirmed),\r\n                            label: 'Infected',\r\n                            borderColor: '#3333ff',\r\n                            fill: true,\r\n                        }, {\r\n                            data: dailyData.map(({ deaths }) => deaths),\r\n                            label: 'Deaths',\r\n                            borderColor: 'red',\r\n                            backgroundColor: 'rgba(255, 0, 0, 0.5)',\r\n                            fill: true,\r\n                        }],\r\n                    }}\r\n                />) : null\r\n    );\r\n\r\n    console.log(confirmed, recovered, deaths);\r\n    const barChart = (\r\n        confirmed\r\n         ? (\r\n             <Bar \r\n                data={{\r\n                    labels: ['Infected', 'Recovered', 'Deaths'],\r\n                    datasets: [{\r\n                        lable: 'People',\r\n                        backgroundColor: ['rgba(0, 0, 255, 0.5)', 'rgba(0, 255, 0, 0.5)', 'rgba(255, 0, 0, 0.5)'],\r\n                        data: [confirmed.value, recovered.value, deaths.value],\r\n                    }]\r\n                }}\r\n                options={{\r\n                    legend: { display: false },\r\n                    title: { display: true, text: `Current state in ${country}`},\r\n                }}\r\n             />\r\n         ) : null\r\n    );\r\n\r\n    return (\r\n        <div className={styles.container}>\r\n            {country ? barChart : lineChart}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Chart;\r\n","import React, { useState, useEffect } from 'react';\r\nimport { NativeSelect, FormControl, FormLabel, Typography } from '@material-ui/core';\r\n\r\nimport styles from './CountryPicker.module.css';\r\n\r\nimport { fetchCountries } from '../../api';\r\n\r\nconst CountryPicker = ({ handleCountryChange }) => {\r\n    const [fetchedCountries, setFetchedCountries] = useState([]);\r\n\r\n    useEffect(() => {\r\n        const fetchAPI = async () => {\r\n            setFetchedCountries(await fetchCountries());\r\n        }\r\n\r\n        fetchAPI();\r\n    }, [setFetchedCountries]);\r\n\r\n    // console.log(fetchedCountries);\r\n\r\n    return (\r\n        <FormControl className={styles.formControl}>\r\n             <FormLabel className={styles.formLabel}>Select Country</FormLabel>\r\n            <NativeSelect defaultValue=\"\" onChange={(e) => handleCountryChange(e.target.value)}>\r\n                <option value=\"\">Global</option>\r\n    {fetchedCountries.map((country, i) => <option key={i} value={country}>{country}</option>)}\r\n            </NativeSelect>\r\n        </FormControl>\r\n    )\r\n}\r\n\r\nexport default CountryPicker;","import React from 'react';\r\n\r\nimport { Cards, Chart, CountryPicker } from './components';\r\nimport styles from './App.module.css';\r\nimport { fetchData } from './api';\r\nimport { fetchCountriesData } from './api';\r\n\r\nimport coronaImage from './images/coronavirus-4.png';\r\n\r\nclass App extends React.Component {\r\n    state = {\r\n        data: {},\r\n        country: '',\r\n    }\r\n\r\n    async componentDidMount() {\r\n        const fetchedData = await fetchData();\r\n        this.setState({ data: fetchedData});\r\n\r\n        // const fetchedCountryData = await fetchCountriesData();\r\n        // console.log(fetchedCountryData);\r\n        \r\n    }\r\n\r\n    handleCountryChange = async (country) => {\r\n        //fetch the data\r\n        const fetchedCountryData = await fetchCountriesData(country);\r\n        // console.log(country);\r\n        // console.log('???', fetchedCountryData);\r\n        this.setState({ data: fetchedCountryData, country: country });\r\n        \r\n        //set the state\r\n    }\r\n\r\n    render() {\r\n        const { data, country } = this.state;\r\n        return (\r\n            <div className={styles.container}>\r\n                <img className={styles.image} src={coronaImage} alt=\"COVID-19\" />\r\n                <Cards data = {data} />\r\n                <CountryPicker handleCountryChange={this.handleCountryChange}/>\r\n                <Chart data={data} country={country}/>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default App;","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\n\r\nimport App from './App';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));","// extracted by mini-css-extract-plugin\nmodule.exports = {\"formControl\":\"CountryPicker_formControl__1z5OB\",\"formLabel\":\"CountryPicker_formLabel__2B7rS\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"App_container__3MLjm\",\"image\":\"App_image__3wbSD\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Chart_container__1gPXe\"};","module.exports = __webpack_public_path__ + \"static/media/coronavirus-4.2cad3417.png\";"],"sourceRoot":""}